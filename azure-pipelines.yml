# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:

- stage: build

  variables:
    sdkVersion: 3.1.x
    solutionPath: RevDogs
    buildConfiguration: Release

  jobs:

  - job: build

    pool:
     vmImage: 'ubuntu-latest'


     steps:

     - task: UseDotNet@2
       inputs:
         packageType: sdk
         version: $(sdkVersion)
         displayName: dotnet $(sdkVersion)

     - task: DotNetCoreCLI@2
       inputs:
         command: publish
         publishWebProjects: true
         arguments:
           --configuration $(buildConfiguration)
           --output $(Build.ArtifactStagingDirectory)/app
         modifyOutputPath: false
         zipAfterPublish: false
       displayName: dotnet publish

     - publish: $(Build.ArtifactStagingDirectory)/app
       artifact: app
       displayName: artifact publish app

- stage: deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: build

  jobs:

  - deployment: deploy_dev

    pool:
      vmImage: ubuntu-latest

    environment: dev

    strategy:
      runOnce:
        deploy:
          steps:

          - download: current
            artifact: app
            displayName: artifact download app

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure-RevatureDogs-project2'
              appType: 'webApp'
              WebAppName: 'RevatureDogs-project2'
              packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
            displayName: azure app service deploy  